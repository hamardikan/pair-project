<%- include('../partials/head') %>
<%- include('../partials/navbar') %>

<div class="max-w-4xl mx-auto px-4 py-10">
    <form action="/posts/<%= post.id %>/edit" method="POST" class="space-y-8" id="editForm" novalidate>
        <!-- Title Input -->
        <div>
            <input type="text"
                   name="title"
                   id="title"
                   value="<%= locals.formData ? formData.title : post.title %>"
                   class="w-full text-5xl font-bold serif-pro border-none focus:outline-none focus:ring-0">
            <div class="text-red-500 text-sm mt-1 hidden" id="titleError">
                <%= locals.errors && errors.title ? errors.title : '' %>
            </div>
        </div>

        <!-- Image URL Input -->
        <div class="space-y-4">
            <div>
                <label class="block text-sm font-medium text-gray-700 mb-2">Cover Image URL</label>
                <input type="url"
                       name="imgUrl"
                       id="imgUrl"
                       value="<%= locals.formData ? formData.imgUrl : (post.imgUrl || '') %>"
                       placeholder="https://example.com/image.jpg"
                       class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-green-500">
                <div class="text-red-500 text-sm mt-1 hidden" id="imgUrlError">
                    <%= locals.errors && errors.imgUrl ? errors.imgUrl : '' %>
                </div>
            </div>

            <!-- Preview current image if exists -->
            <% if (post.imgUrl) { %>
                <div class="relative rounded-lg overflow-hidden border border-gray-200">
                    <img src="<%= post.imgUrl %>" 
                         alt="Current cover image"
                         class="w-full h-[300px] object-cover"
                         onerror="this.style.display='none'">
                </div>
            <% } %>
        </div>

        <!-- Quill Editor -->
        <div>
            <div id="editor" class="h-96"></div>
            <input type="hidden" name="content" id="hiddenContent">
            <div class="text-red-500 text-sm mt-1 hidden" id="contentError">
                <%= locals.errors && errors.content ? errors.content : '' %>
            </div>
        </div>

        <!-- Tags Input -->
        <div>
            <input type="text"
                   name="tags"
                   id="tags"
                   value="<%= locals.formData ? formData.tags : Helper.formatTags(post.Tags) %>"
                   placeholder="Add tags (comma separated)"
                   class="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-green-500">
            <div class="text-red-500 text-sm mt-1 hidden" id="tagsError">
                <%= locals.errors && errors.tags ? errors.tags : '' %>
            </div>
        </div>

        <!-- Server-side Error Display -->
        <% if (locals.error) { %>
            <div class="text-red-500 text-sm" id="serverError"><%= error %></div>
        <% } %>

        <!-- Submit Button -->
        <div class="flex justify-end space-x-4">
            <a href="/posts/<%= post.id %>"
               class="px-6 py-2 border border-gray-300 text-gray-700 rounded-full hover:bg-gray-50">
                Cancel
            </a>
            <button type="submit"
                    class="px-6 py-2 bg-green-600 text-white rounded-full hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                Save Changes
            </button>
        </div>
    </form>
</div>

<script>
var quill = new Quill('#editor', {
    theme: 'snow',
    modules: {
        toolbar: [
            [{ 'header': [1, 2, false] }],
            ['bold', 'italic', 'underline'],
            ['link', 'blockquote', 'code-block'],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
            ['image'],
            ['clean']
        ]
    }
});

// Initialize content from either formData (if validation failed) or post content
let initialContent = <%- locals.formData ? JSON.stringify(formData.content) : JSON.stringify(post.content) %>;

// Ensure we have valid content
if (initialContent) {
    // Set editor content using Quill's setContents with Delta if possible, otherwise use HTML
    try {
        const delta = quill.clipboard.convert(initialContent);
        quill.setContents(delta, 'silent');
    } catch (e) {
        console.error('Error setting Quill contents:', e);
        quill.root.innerHTML = initialContent;
    }
}

function validateForm() {
    let isValid = true;
    const errors = {};

    // Title validation
    const title = document.getElementById('title').value.trim();
    if (!title) {
        errors.title = 'Title is required';
        isValid = false;
    }

    // Content validation
    const editorContent = quill.root.innerHTML;
    if (editorContent === '<p><br></p>' || !editorContent.trim()) {
        errors.content = 'Content is required';
        isValid = false;
    }

    // Image URL validation (optional)
    const imgUrl = document.getElementById('imgUrl').value.trim();
    if (imgUrl && !isValidUrl(imgUrl)) {
        errors.imgUrl = 'Please enter a valid URL';
        isValid = false;
    }

    // Display errors
    Object.keys(errors).forEach(field => {
        const errorElement = document.getElementById(`${field}Error`);
        if (errorElement) {
            errorElement.textContent = errors[field];
            errorElement.classList.remove('hidden');
        }
    });

    return isValid;
}

function isValidUrl(string) {
    try {
        new URL(string);
        return true;
    } catch (_) {
        return false;
    }
}

// Clear error when user starts typing
document.querySelectorAll('input').forEach(input => {
    input.addEventListener('input', function() {
        const errorElement = document.getElementById(`${this.id}Error`);
        if (errorElement) {
            errorElement.classList.add('hidden');
        }
    });
});

// Clear content error when editor content changes
quill.on('text-change', function() {
    const errorElement = document.getElementById('contentError');
    if (errorElement) {
        errorElement.classList.add('hidden');
    }
});

document.getElementById('editForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // Clear all previous errors
    document.querySelectorAll('[id$="Error"]').forEach(el => el.classList.add('hidden'));

    if (validateForm()) {
        const content = document.querySelector('#hiddenContent');
        content.value = quill.root.innerHTML;
        this.submit();
    }
});
</script>

<%- include('../partials/footer') %>